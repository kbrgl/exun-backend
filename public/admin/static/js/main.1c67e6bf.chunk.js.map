{"version":3,"sources":["components/Container.js","components/Header.js","components/Layout/index.js","components/Grid/Column.js","components/Grid/Row.js","store/actions.js","components/Button.js","pages/Home/Posts/PostForm.js","pages/Home/Posts/Post.js","pages/Home/Posts/index.js","pages/Home/Admins/Admin.js","pages/Home/Admins/index.js","pages/Home/index.js","pages/Login.js","store/reducers.js","lib/api.js","store/sagas.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","Header","Header_templateObject","Layout","_ref","children","react_default","a","createElement","defaultProps","sizes","offsets","Column","Column_templateObject","props","width","marginLeft","Grid_Column","arguments","length","undefined","size","offset","Object","objectWithoutProperties","assign","Row_templateObject","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGOUT_SUCCESS","POSTS_FETCH","POSTS_FETCH_SUCCESS","POST_CREATE","POST_CREATE_SUCCESS","POST_DELETE","POST_DELETE_SUCCESS","POST_EDIT","POST_EDIT_SUCCESS","ADMINS_FETCH","ADMINS_FETCH_SUCCESS","ADMIN_CREATE","ADMIN_CREATE_SUCCESS","ADMIN_DELETE","ADMIN_DELETE_SUCCESS","DefaultButton","button","Button_templateObject","PrimaryButton","_templateObject2","Button","_ref$primary","primary","Component","PostForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","post","createPost","_this$state","state","title","body","shouldPost","shouldNotify","isTest","setState","getInitialState","edit","editPost","_this$state2","id","_this2","_this$state3","style","padding","border","borderRadius","type","placeholder","value","onChange","event","target","checked","components_Button","onClick","React","connect","dispatch","options","formatDate","date","format","PostWrapper","Post_templateObject","PostMetadata","Post_templateObject2","Box","span","_templateObject3","Actions","_templateObject4","ActionButton","attrs","_templateObject5","Post","del","_this$props","deletePost","window","confirm","concat","_this$props2","created_at","updated_at","display","alignItems","justifyContent","fontSize","color","fontWeight","whiteSpace","Posts","posts","Posts_PostForm","map","Posts_Post","key","AdminWrapper","Admin_templateObject","data-type","Admin_templateObject2","Admin","deleteAdmin","email","Admin_Actions","background","AdminList","Admins_templateObject","Admins","create","createAdmin","prompt","password","data","confirmation","admins","marginBottom","admin","Admins_Admin","paddingLeft","paddingTop","Home_templateObject","Home","auth","fetchPosts","fetchAdmins","ok","logout","src_components_Layout","components_Header","components_Container","Home_ActionButton","Row","Home_Admins","Home_Posts","es","noThrow","to","Login","done","login","message","height","flexDirection","renderError","onKeyDown","keyCode","href","token","localStorage","getItem","initialState","sortAdmins","arr","slice","sort","b","app","action","objectSpread","toConsumableArray","filter","url","route","_callee","payload","response","json","regenerator_default","wrap","_context","prev","next","fetch","method","headers","Headers","Content-Type","JSON","stringify","sent","abrupt","stop","_callee2","_context2","_callee3","_context3","Authorization","_callee4","_context4","_callee5","_context5","_callee6","_context6","_callee7","_context7","_callee8","_context8","api","rootSaga","getTokenFromState","res","setItem","put","_marked","removeItem","_marked2","_marked3","select","_marked4","_marked5","_marked6","_marked7","_marked8","_context9","_marked9","_context10","all","takeLatest","_marked10","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","configureStore","App","react_redux_es","pages_Home","path","pages_Login","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c67e6bf.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  @media (min-width: 400px) {\n    width: 90%;\n    padding: 0;\n  }\n\n  @media (min-width: 550px) {\n    width: 80%;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst Header = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  background: linear-gradient(to bottom right, #fff, #f5f8fe);\n`\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './normalize.css'\nimport './index.css'\n\nconst Layout = ({ children }) => (\n  <div>\n    <div>{children}</div>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node,\n}\nLayout.defaultProps = {\n  children: null,\n}\n\nexport default Layout\n","// @flow\nimport React from 'react'\nimport type { Node } from 'react'\nimport styled from 'styled-components'\n\nconst sizes = [\n  '4.66666666667%',\n  '13.3333333333%',\n  '22%',\n  '30.6666666667%',\n  '39.3333333333%',\n  '48%',\n  '56.6666666667%',\n  '65.3333333333%',\n  '74%',\n  '82.6666666667%',\n  '91.3333333333%',\n  '100%',\n]\n\nconst offsets = [\n  '8.66666666667%',\n  '17.3333333333%',\n  '26%',\n  '34.6666666667%',\n  '43.3333333333%',\n  '52%',\n  '60.6666666667%',\n  '69.3333333333%',\n  '78%',\n  '86.6666666667%',\n  '95.3333333333%',\n]\n\nconst Column = styled.div`\n  width: 100%;\n  float: left;\n  box-sizing: border-box;\n\n  @media (min-width: 550px) {\n    width: ${props => props.width};\n    &:first-child {\n      margin-left: ${props => props.marginLeft || 0};\n    }\n    margin-left: ${props => props.marginLeft || '4%'};\n  }\n`\n\ntype Props = {\n  size: number,\n  offset: number,\n  children?: Node,\n}\n\nexport default ({ size, offset, children, ...props }: Props = {}) => {\n  const width = sizes[size - 1] || '100%'\n  let marginLeft\n  if (offset) {\n    marginLeft = offsets[offset - 1] || '4%'\n  } else if (width === '100%') {\n    marginLeft = 0\n  } else {\n    marginLeft = null\n  }\n\n  return (\n    <Column marginLeft={marginLeft} width={width} {...props}>\n      {children}\n    </Column>\n  )\n}\n","import styled from 'styled-components'\n\nexport default styled.div`\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`\n","// @flow\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\nexport const LOGOUT = 'LOGOUT'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const POSTS_FETCH = 'POSTS_FETCH'\nexport const POSTS_FETCH_SUCCESS = 'POSTS_FETCH_SUCCESS'\nexport const POST_CREATE = 'POST_CREATE'\nexport const POST_CREATE_SUCCESS = 'POST_CREATE_SUCCESS'\nexport const POST_DELETE = 'POST_DELETE'\nexport const POST_DELETE_SUCCESS = 'POST_DELETE_SUCCESS'\nexport const POST_EDIT = 'POST_EDIT'\nexport const POST_EDIT_SUCCESS = 'POST_EDIT_SUCCESS'\nexport const ADMINS_FETCH = 'ADMINS_FETCH'\nexport const ADMINS_FETCH_SUCCESS = 'ADMINS_FETCH_SUCCESS'\nexport const ADMIN_CREATE = 'ADMIN_CREATE'\nexport const ADMIN_CREATE_SUCCESS = 'ADMIN_CREATE_SUCCESS'\nexport const ADMIN_DELETE = 'ADMIN_DELETE'\nexport const ADMIN_DELETE_SUCCESS = 'ADMIN_DELETE_SUCCESS'\n\nexport const login = (email: string, password: string) => ({\n  type: LOGIN,\n  email,\n  password,\n})\n\nexport const logout = () => ({\n  type: LOGOUT,\n})\n\nexport const fetchPosts = () => ({\n  type: POSTS_FETCH,\n})\n\nexport const createPost = (title: string, body: string, options: Object) => ({\n  type: POST_CREATE,\n  title,\n  body,\n  options,\n})\n\nexport const deletePost = (id: number) => ({\n  type: POST_DELETE,\n  id,\n})\n\nexport const editPost = (id: number, title: string, body: string) => ({\n  type: POST_EDIT,\n  id,\n  title,\n  body,\n})\n\nexport const fetchAdmins = () => ({\n  type: ADMINS_FETCH,\n})\n\nexport const createAdmin = (email: string, password: string) => ({\n  type: ADMIN_CREATE,\n  email,\n  password,\n})\n\nexport const deleteAdmin = (id: number) => ({\n  type: ADMIN_DELETE,\n  id,\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst DefaultButton = styled.button`\n  display: inline-block;\n  height: 45px;\n  padding: 0 22px;\n  color: #2977f5;\n  text-align: center;\n  font-size: 1.4rem;\n  font-weight: 600;\n  line-height: 45px;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  text-decoration: none;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n  outline: 0;\n  border-radius: 4px;\n  cursor: pointer;\n  box-sizing: border-box;\n  transition-property: color;\n  transition-duration: 0.3s;\n  transition-timing-function: ease-in-out;\n`\n\nconst PrimaryButton = styled(DefaultButton)`\n  background-color: #2977f5;\n  box-shadow: 0 2px 10px -2px rgba(0, 0, 0, 0.1);\n  color: rgba(255, 255, 255, 0.9);\n  display: block;\n  transform: translateY(0);\n  transition-property: background-color, transform, box-shadow;\n\n  &:hover {\n    background-color: #2365cf;\n  }\n`\n\nconst Button = ({ primary = false, ...props }) => {\n  const Component = primary ? PrimaryButton : DefaultButton\n  return <Component {...props} />\n}\n\nexport default Button\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { createPost, editPost } from '../../../store/actions'\n\nimport Button from '../../../components/Button'\n\ntype Props = {\n  createPost: Function,\n  editPost: Function,\n}\nclass PostForm extends React.Component<Props> {\n  constructor(props) {\n    super(props)\n    this.state = this.getInitialState()\n  }\n\n  getInitialState() {\n    return {\n      id: '',\n      title: '',\n      body: '',\n      shouldPost: true,\n      shouldNotify: false,\n      isTest: false,\n    }\n  }\n\n  post = () => {\n    const { createPost } = this.props\n    const { title, body, shouldPost, shouldNotify, isTest } = this.state\n    createPost(title, body, {\n      shouldPost,\n      shouldNotify,\n      isTest,\n    })\n    // TODO: handle error.\n    this.setState(this.getInitialState())\n  }\n\n  edit = () => {\n    const { editPost } = this.props\n    const { id, title, body } = this.state\n    editPost(id, title, body)\n    // TODO: handle error.\n    this.setState(this.getInitialState())\n  }\n\n  render() {\n    const { id, title, body, shouldPost, shouldNotify, isTest } = this.state\n    return (\n      <form\n        style={{\n          padding: '50px 30px',\n          border: '1px solid #eaeaef',\n          borderRadius: 4,\n        }}\n      >\n        {/* TODO: show error */}\n        <input\n          type=\"number\"\n          style={{\n            width: 125,\n            borderRadius: 100,\n            padding: 20,\n          }}\n          placeholder=\"#\"\n          value={id}\n          onChange={event => {\n            this.setState({\n              id: event.target.value,\n            })\n          }}\n        />\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={event => {\n            this.setState({\n              title: event.target.value,\n            })\n          }}\n        />\n        <br />\n        <br />\n        <textarea\n          placeholder=\"Body\"\n          value={body}\n          onChange={event => {\n            this.setState({\n              body: event.target.value,\n            })\n          }}\n        />\n        <br />\n        <br />\n        {id ? null : (\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={shouldPost}\n              onChange={event => {\n                this.setState({\n                  shouldPost: event.target.checked,\n                })\n              }}\n            />{' '}\n            Post &nbsp;\n            <input\n              type=\"checkbox\"\n              checked={shouldNotify}\n              onChange={event => {\n                this.setState({\n                  shouldNotify: event.target.checked,\n                })\n              }}\n            />{' '}\n            Notify &nbsp;\n            {shouldNotify ? (\n              <span>\n                <input\n                  type=\"checkbox\"\n                  checked={isTest}\n                  onChange={event => {\n                    this.setState({\n                      isTest: event.target.checked,\n                    })\n                  }}\n                />{' '}\n                Test\n              </span>\n            ) : null}\n            <br />\n            <br />\n          </div>\n        )}\n\n        <Button type=\"button\" primary onClick={id ? this.edit : this.post}>\n          {id ? 'Edit' : 'Publish'}\n        </Button>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  createPost: (title, body, options) => {\n    dispatch(createPost(title, body, options))\n  },\n  editPost: (id, title, body) => {\n    dispatch(editPost(id, title, body))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PostForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { format } from 'date-fns'\n\nimport { deletePost } from '../../../store/actions'\nimport type { Post as PostType } from '../../../types'\n\nconst formatDate = date => format(date, 'd MMM yyyy, hh:mm:ss')\n\nconst PostWrapper = styled.div`\n  border-bottom: 1px solid #eaeaef;\n  padding: 6rem 0;\n  overflow: hidden;\n\n  &:last-child {\n    border: 0;\n  }\n`\n\nconst PostMetadata = styled.div`\n  color: #84849b;\n  font-size: 1.5rem;\n`\n\nconst Box = styled.span`\n  border: 1px solid #84849b44;\n  padding: 2px 4px;\n  border-radius: 2px;\n`\n\nconst Actions = styled.div`\n  margin-top: 2rem;\n`\n\nconst ActionButton = styled.button.attrs({\n  type: 'button',\n})`\n  color: #2977f5;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n  font-size: 0.8em;\n  background-color: #fff;\n  padding: 10px 20px;\n  border-radius: 100px;\n  border: 1px solid #eaeaef;\n  cursor: pointer;\n  transition: box-shadow 0.2s, color 0.2s;\n\n  &:hover {\n    color: #2977f5aa;\n    box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.05);\n  }\n`\n\ntype Props = PostType\nclass Post extends React.Component<Props> {\n  del = () => {\n    const { deletePost, id, title } = this.props\n    // eslint-disable-next-line no-alert\n    if (!window.confirm(`Are you sure you want to delete post '${title}'?`)) return\n    deletePost(id)\n  }\n\n  render() {\n    // eslint-disable-next-line camelcase\n    const { id, title, body, created_at, updated_at } = this.props\n    return (\n      <PostWrapper>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n          }}\n        >\n          <h2\n            style={{\n              fontSize: '2rem',\n            }}\n          >\n            {title}\n          </h2>\n          <span\n            style={{\n              color: '#2977f5',\n              fontWeight: 'bold',\n              fontSize: '0.8em',\n            }}\n          >\n            #{id}\n          </span>\n        </div>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {body}\n        </p>\n        <PostMetadata>\n          Published <Box>{formatDate(created_at)}</Box>, updated at{' '}\n          <Box>{formatDate(updated_at)}</Box>\n        </PostMetadata>\n        <Actions>\n          <ActionButton onClick={this.del}>Delete</ActionButton>\n        </Actions>\n      </PostWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  deletePost: id => {\n    dispatch(deletePost(id))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Post)\n","// @flow\nimport React from 'react'\n\nimport PostForm from './PostForm'\nimport Post from './Post'\nimport type { Post as PostType } from '../../../types'\n\ntype Props = {\n  posts: PostType[],\n}\nclass Posts extends React.Component<Props> {\n  render() {\n    const { posts } = this.props\n    return (\n      <div>\n        <PostForm />\n        {posts.map(post => (\n          <Post key={post.id} {...post} />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Posts\n","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\n\nimport { deleteAdmin } from '../../../store/actions'\nimport type { Admin as AdminType } from '../../../types'\n\nimport Button from '../../../components/Button'\n\nconst AdminWrapper = styled.div`\n  height: 60px;\n  line-height: 60px;\n  border-bottom: 1px solid #eee;\n  position: relative;\n\n  &:last-child {\n    border: 0;\n  }\n\n  &:hover div[data-type='action-box'] {\n    display: flex;\n  }\n`\n\nconst Actions = styled.div.attrs({\n  'data-type': 'action-box',\n})`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  line-height: 100%;\n  background-color: rgba(255, 255, 255, 0.1);\n  z-index: 1;\n  display: none;\n  align-items: center;\n  justify-content: center;\n`\n\ntype Props = AdminType\nclass Admin extends React.Component<Props> {\n  del = () => {\n    const { deleteAdmin, id, email } = this.props\n    // eslint-disable-next-line no-alert\n    if (!window.confirm(`Are you sure you want to delete admin '${email}'?`)) return\n    deleteAdmin(id)\n  }\n\n  render() {\n    // eslint-disable-next-line camelcase\n    const { email } = this.props\n    return (\n      <AdminWrapper>\n        {email}\n        <Actions>\n          <Button\n            style={{\n              background: 'rgba(255, 255, 255, 0.6)',\n            }}\n            type=\"button\"\n            onClick={this.del}\n          >\n            Delete\n          </Button>\n        </Actions>\n      </AdminWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  deleteAdmin: id => {\n    dispatch(deleteAdmin(id))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Admin)\n","/* eslint-disable no-alert */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport type { Admin as AdminType } from '../../../types'\nimport Admin from './Admin'\n\nimport Button from '../../../components/Button'\n\nconst AdminList = styled.div`\n  max-height: 250px;\n  overflow: auto;\n  border: 1px solid #eaeaef;\n  border-left: 0;\n  border-right: 0;\n`\n\ntype Props = {\n  admins: AdminType[],\n  createAdmin: Function,\n}\nclass Admins extends React.Component<Props> {\n  create = () => {\n    const { createAdmin } = this.props\n    const email = window.prompt('Enter email')\n    if (!email) {\n      return\n    }\n    const password = window.prompt('Set a password')\n    if (!password) {\n      return\n    }\n    const data = {\n      email,\n      password,\n    }\n    let confirmation = window.prompt('Confirm password')\n    while (confirmation !== data.password) {\n      if (!confirmation) {\n        return\n      }\n      confirmation = window.prompt('Wrong password, try again')\n    }\n    createAdmin(email, password)\n  }\n\n  render() {\n    const { admins } = this.props\n    return (\n      <div\n        style={{\n          marginBottom: '6rem',\n        }}\n      >\n        <h2\n          style={{\n            fontSize: '2rem',\n          }}\n        >\n          Admins\n        </h2>\n        <AdminList>\n          {admins.map(admin => (\n            <Admin key={admin.id} {...admin} />\n          ))}\n        </AdminList>\n        <Button style={{ paddingLeft: 0, paddingTop: '1rem' }} type=\"button\" onClick={this.create}>\n          Create\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default Admins\n","// @flow\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Redirect } from '@reach/router'\nimport { connect } from 'react-redux'\n\nimport Container from '../../components/Container'\nimport Header from '../../components/Header'\nimport Layout from '../../components/Layout'\nimport { Row, Column } from '../../components/Grid'\nimport Posts from './Posts'\nimport Admins from './Admins'\nimport type { Post, Admin } from '../../types'\nimport { fetchPosts, fetchAdmins, createAdmin, logout } from '../../store/actions'\n\nconst ActionButton = styled.button.attrs({\n  type: 'button',\n})`\n  color: #2977f5;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n  font-size: 0.8em;\n  background-color: #fff;\n  padding: 10px 20px;\n  border-radius: 100px;\n  border: 1px solid #eaeaef;\n  cursor: pointer;\n  transition: box-shadow 0.2s, color 0.2s;\n\n  &:hover {\n    color: #2977f5aa;\n    box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.05);\n  }\n`\n\ntype Props = {\n  auth: Object,\n  posts: Post[],\n  admins: Admin[],\n  fetchPosts: Function,\n  fetchAdmins: Function,\n  createAdmin: Function,\n  logout: Function,\n}\nclass Home extends React.Component<Props> {\n  componentDidMount() {\n    const { auth, fetchPosts, fetchAdmins } = this.props\n    if (auth.ok) {\n      fetchPosts()\n      fetchAdmins()\n    }\n  }\n\n  render() {\n    const { auth, posts, admins, createAdmin, logout } = this.props\n    if (!auth.ok) {\n      return <Redirect noThrow to=\"/admin/login\" />\n    }\n    return (\n      <Layout>\n        <Header style={{ paddingTop: '8rem' }}>\n          <Container\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <h1\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              Admin\n            </h1>\n            <ActionButton onClick={logout}>Logout</ActionButton>\n          </Container>\n        </Header>\n        <Container\n          style={{\n            paddingTop: '6rem',\n          }}\n        >\n          <Row>\n            <Column size={4}>\n              <Admins createAdmin={createAdmin} admins={admins} />\n            </Column>\n            <Column size={8}>\n              <Posts posts={posts} />\n            </Column>\n          </Row>\n        </Container>\n      </Layout>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  posts: state.posts,\n  admins: state.admins,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPosts: () => {\n    dispatch(fetchPosts())\n  },\n  fetchAdmins: () => {\n    dispatch(fetchAdmins())\n  },\n  createAdmin: (email, password) => {\n    dispatch(createAdmin(email, password))\n  },\n  logout: () => {\n    dispatch(logout())\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home)\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from '@reach/router'\n\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport Button from '../components/Button'\nimport { Row, Column } from '../components/Grid'\n\nimport { login } from '../store/actions'\n\ntype Props = {\n  auth: Function,\n  login: Function,\n}\ntype State = {\n  email: string,\n  password: string,\n}\nclass Login extends React.Component<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  done = () => {\n    const { login } = this.props\n    const { email, password } = this.state\n    login(email, password)\n  }\n\n  renderError() {\n    // caller should ensure `message' property exists\n    const { auth } = this.props\n    const { message } = auth\n    return (\n      <div\n        style={{\n          marginBottom: '2rem',\n        }}\n      >\n        <strong>{message}</strong>\n      </div>\n    )\n  }\n\n  render() {\n    const { auth } = this.props\n    const { email, password } = this.state\n    if (auth.ok) {\n      return <Redirect noThrow to=\"/admin\" />\n    }\n    return (\n      <Layout>\n        <div\n          style={{\n            height: '100vh',\n            background: 'linear-gradient(to bottom right, #fff, #f5f8fe)',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        >\n          <Container>\n            <Row>\n              <Column size={6} offset={3}>\n                <div\n                  style={{\n                    background: '#fff',\n                    padding: '30px',\n                    border: '1px solid #eaeaef',\n                    borderRadius: 4,\n                  }}\n                >\n                  <h2\n                    style={{\n                      marginBottom: '2rem',\n                    }}\n                  >\n                    Login\n                  </h2>\n                  {this.renderError()}\n                  <form>\n                    <input\n                      onChange={event => {\n                        this.setState({\n                          email: event.target.value,\n                        })\n                      }}\n                      value={email}\n                      placeholder=\"Email\"\n                      type=\"text\"\n                      style={{\n                        marginBottom: '1.8rem',\n                      }}\n                    />\n                    <input\n                      onChange={event => {\n                        this.setState({\n                          password: event.target.value,\n                        })\n                      }}\n                      onKeyDown={event => {\n                        if (event.keyCode === 13) {\n                          this.done()\n                        }\n                      }}\n                      value={password}\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      style={{\n                        marginBottom: '2rem',\n                      }}\n                    />\n                    <Button primary type=\"button\" onClick={this.done}>\n                      Login\n                    </Button>\n                  </form>\n                  <span\n                    style={{\n                      color: '#a6a6ab',\n                    }}\n                  >\n                    Don&apos;t have a login?{' '}\n                    <a href=\"https://m.me/SupremeLeaderKabir\">Message Kabir</a>\n                  </span>\n                </div>\n              </Column>\n            </Row>\n          </Container>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  login(email, password) {\n    dispatch(login(email, password))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login)\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  POSTS_FETCH_SUCCESS,\n  POST_CREATE_SUCCESS,\n  POST_DELETE_SUCCESS,\n  POST_EDIT_SUCCESS,\n  ADMINS_FETCH_SUCCESS,\n  ADMIN_CREATE_SUCCESS,\n  ADMIN_DELETE_SUCCESS,\n  LOGOUT_SUCCESS,\n} from './actions'\n\nconst token = localStorage.getItem('token')\n\nconst initialState = {\n  auth: {\n    ok: !!token,\n    message: '',\n    token,\n  },\n  posts: [],\n  admins: [],\n}\n\nconst sortAdmins = arr =>\n  arr.slice(0).sort((a, b) => {\n    if (a.email < b.email) {\n      return -1\n    }\n    if (a.email > b.email) {\n      return 1\n    }\n    return 0\n  })\n\nfunction app(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        auth: {\n          ok: true,\n          token: action.token,\n        },\n      }\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        auth: {\n          ok: false,\n          message: action.message,\n        },\n      }\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        auth: {\n          ok: false,\n          message: '',\n        },\n      }\n    case POSTS_FETCH_SUCCESS:\n      return {\n        ...state,\n        posts: action.posts,\n      }\n    case POST_CREATE_SUCCESS:\n      return {\n        ...state,\n        posts: [action.post, ...state.posts],\n      }\n    case POST_DELETE_SUCCESS:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post.id !== action.id),\n      }\n    case POST_EDIT_SUCCESS:\n      return {\n        ...state,\n        posts: state.posts.map(post => (post.id === action.post.id ? action.post : post)),\n      }\n    case ADMINS_FETCH_SUCCESS:\n      return {\n        ...state,\n        admins: action.admins,\n      }\n    case ADMIN_CREATE_SUCCESS:\n      return {\n        ...state,\n        admins: sortAdmins([action.admin, ...state.admins]),\n      }\n    case ADMIN_DELETE_SUCCESS:\n      return {\n        ...state,\n        admins: state.admins.filter(admin => admin.id !== action.id),\n      }\n    default:\n      return state\n  }\n}\n\nexport default app\n","function url(route) {\n  return `/api/v1/${route}`\n}\n\nasync function login(email, password) {\n  const payload = {\n    email,\n    password,\n  }\n  const response = await fetch(url('auth'), {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  return json\n}\n\nasync function fetchPosts() {\n  const response = await fetch(url('posts'))\n  const json = await response.json()\n  return json.posts\n}\n\nasync function createPost(token, title, body, options) {\n  const payload = {\n    title,\n    body,\n    shouldPost: options.shouldPost,\n    shouldNotify: options.shouldNotify,\n    isTest: options.isTest,\n  }\n  const response = await fetch(url('posts'), {\n    method: 'POST',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  if (json.post) {\n    return json.post\n  }\n  return null\n}\n\nasync function deletePost(token, id) {\n  const response = await fetch(url(`posts/${id}`), {\n    method: 'DELETE',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.post\n}\n\nasync function editPost(token, id, title, body) {\n  const payload = {\n    title,\n    body,\n  }\n  const response = await fetch(url(`posts/${id}`), {\n    method: 'PATCH',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.post\n}\n\nasync function fetchAdmins(token) {\n  const response = await fetch(url('admins'), {\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n    }),\n  })\n  const json = await response.json()\n  return json.admins\n}\n\nasync function createAdmin(token, email, password) {\n  const payload = {\n    email,\n    password,\n  }\n  const response = await fetch(url('admins'), {\n    method: 'POST',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.admin\n}\n\nasync function deleteAdmin(token, id) {\n  const response = await fetch(url(`admins/${id}`), {\n    method: 'DELETE',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.post\n}\n\nexport default {\n  login,\n  fetchPosts,\n  createPost,\n  deletePost,\n  editPost,\n  fetchAdmins,\n  createAdmin,\n  deleteAdmin,\n}\n","import { put, takeLatest, call, all, select } from 'redux-saga/effects'\nimport api from '../lib/api'\nimport {\n  LOGIN,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  POSTS_FETCH,\n  POSTS_FETCH_SUCCESS,\n  ADMINS_FETCH,\n  ADMINS_FETCH_SUCCESS,\n  POST_CREATE,\n  POST_CREATE_SUCCESS,\n  POST_DELETE,\n  POST_DELETE_SUCCESS,\n  POST_EDIT_SUCCESS,\n  POST_EDIT,\n  ADMIN_DELETE,\n  ADMIN_DELETE_SUCCESS,\n  ADMIN_CREATE,\n  ADMIN_CREATE_SUCCESS,\n  LOGOUT,\n  LOGOUT_SUCCESS,\n} from './actions'\n\nconst getTokenFromState = state => state.auth.token\n\nfunction* login(action) {\n  const res = yield call(api.login, action.email, action.password)\n  if (res.ok) {\n    localStorage.setItem('token', res.token)\n    yield put({ type: LOGIN_SUCCESS, token: res.token })\n  } else yield put({ type: LOGIN_FAILURE, message: res.message })\n}\n\nfunction* logout() {\n  localStorage.removeItem('token')\n  yield put({ type: LOGOUT_SUCCESS })\n}\n\nfunction* fetchPosts() {\n  const posts = yield call(api.fetchPosts)\n  yield put({ type: POSTS_FETCH_SUCCESS, posts })\n}\n\nfunction* createPost(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  const post = yield call(api.createPost, token, action.title, action.body, action.options)\n  if (post) {\n    yield put({\n      type: POST_CREATE_SUCCESS,\n      post,\n    })\n  }\n}\n\nfunction* deletePost(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  yield call(api.deletePost, token, action.id)\n  yield put({\n    type: POST_DELETE_SUCCESS,\n    id: action.id,\n  })\n}\n\nfunction* editPost(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  const post = yield call(api.editPost, token, action.id, action.title, action.body)\n  yield put({\n    type: POST_EDIT_SUCCESS,\n    post,\n  })\n}\n\nfunction* fetchAdmins() {\n  const token = yield select(getTokenFromState)\n  const admins = yield call(api.fetchAdmins, token)\n  yield put({ type: ADMINS_FETCH_SUCCESS, admins })\n}\n\nfunction* createAdmin(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  const admin = yield call(api.createAdmin, token, action.email, action.password)\n  yield put({\n    type: ADMIN_CREATE_SUCCESS,\n    admin,\n  })\n}\n\nfunction* deleteAdmin(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  yield call(api.deleteAdmin, token, action.id)\n  yield put({\n    type: ADMIN_DELETE_SUCCESS,\n    id: action.id,\n  })\n}\n\nfunction* rootSaga() {\n  yield all([\n    takeLatest(LOGIN, login),\n    takeLatest(LOGOUT, logout),\n    takeLatest(POSTS_FETCH, fetchPosts),\n    takeLatest(POST_CREATE, createPost),\n    takeLatest(POST_DELETE, deletePost),\n    takeLatest(POST_EDIT, editPost),\n    takeLatest(ADMINS_FETCH, fetchAdmins),\n    takeLatest(ADMIN_CREATE, createAdmin),\n    takeLatest(ADMIN_DELETE, deleteAdmin),\n  ])\n}\n\nexport default rootSaga\n","// @flow\nimport React from 'react'\nimport { Router } from '@reach/router'\nimport { Provider } from 'react-redux'\nimport Home from './pages/Home'\nimport Login from './pages/Login'\nimport configureStore from './store'\n\nconst { store } = configureStore()\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Home path=\"/admin\" />\n      <Login path=\"/admin/login\" />\n    </Router>\n  </Provider>\n)\n\nexport default App\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\n  sagaMiddleware.run(rootSaga)\n  return { store }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}