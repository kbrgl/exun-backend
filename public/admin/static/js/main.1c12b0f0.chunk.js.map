{"version":3,"sources":["components/Container.js","components/Header.js","components/Layout/index.js","components/Grid/Column.js","components/Grid/Row.js","store/actions.js","components/Button.js","pages/Home/PostForm.js","pages/Home/Post.js","pages/Home/Posts.js","pages/Home/Admin.js","pages/Home/Admins.js","pages/Home/index.js","pages/Login.js","store/reducers.js","lib/api.js","store/sagas.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","Header","Header_templateObject","Layout","_ref","children","react_default","a","createElement","defaultProps","sizes","offsets","Column","Column_templateObject","props","width","marginLeft","Grid_Column","arguments","length","undefined","size","offset","Row_templateObject","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","POSTS_FETCH","POSTS_FETCH_SUCCESS","POST_CREATE","POST_CREATE_SUCCESS","POST_DELETE","POST_DELETE_SUCCESS","POST_EDIT","POST_EDIT_SUCCESS","ADMINS_FETCH","ADMINS_FETCH_SUCCESS","ADMIN_CREATE","ADMIN_CREATE_SUCCESS","ADMIN_DELETE","ADMIN_DELETE_SUCCESS","DefaultButton","button","Button_templateObject","PrimaryButton","_templateObject2","Button","_ref$primary","primary","Object","objectWithoutProperties","Component","PostForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","post","createPost","_this$state","state","title","body","shouldPost","shouldNotify","isTest","setState","getInitialState","edit","editPost","_this$state2","id","_this2","_this$state3","style","padding","border","borderRadius","boxShadow","type","borderWidth","placeholder","value","onChange","event","target","checked","components_Button","onClick","React","connect","dispatch","options","formatDate","date","format","PostWrapper","Post_templateObject","PostMetadata","Post_templateObject2","Box","span","_templateObject3","Actions","_templateObject4","ActionButton","attrs","_templateObject5","Post","del","_this$props","deletePost","window","confirm","concat","_this$props2","created_at","updated_at","display","alignItems","justifyContent","fontSize","color","fontWeight","Posts","posts","Home_PostForm","map","Home_Post","assign","key","AdminWrapper","Admin_templateObject","data-type","Admin_templateObject2","Admin","deleteAdmin","email","Admin_Actions","background","AdminList","Admins_templateObject","Admins","create","createAdmin","prompt","password","data","confirmation","admins","admin","Home_Admin","paddingLeft","Home","fetchPosts","fetchAdmins","auth","ok","src_components_Layout","components_Header","paddingTop","components_Container","Row","Home_Admins","Home_Posts","es","noThrow","to","Login","done","login","message","marginBottom","paddingBottom","flexDirection","renderError","token","localStorage","getItem","initialState","sortAdmins","arr","slice","sort","b","app","action","objectSpread","toConsumableArray","filter","url","route","_callee","payload","response","json","regenerator_default","wrap","_context","prev","next","fetch","method","headers","Headers","Content-Type","JSON","stringify","sent","abrupt","stop","_callee2","_context2","_callee3","_context3","Authorization","_callee4","_context4","_callee5","_context5","_callee6","_context6","_callee7","_context7","_callee8","_context8","api","rootSaga","getTokenFromState","res","setItem","put","_marked","_marked2","select","_marked3","_marked4","_marked5","_marked6","_marked7","_marked8","_context9","all","takeLatest","_marked9","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","configureStore","App","react_redux_es","pages_Home","path","pages_Login","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c12b0f0.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  @media (min-width: 400px) {\n    width: 90%;\n    padding: 0;\n  }\n\n  @media (min-width: 550px) {\n    width: 80%;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst Header = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  background: rgb(245, 248, 255);\n`\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './normalize.css'\nimport './index.css'\n\nconst Layout = ({ children }) => (\n  <div>\n    <div>{children}</div>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node,\n}\nLayout.defaultProps = {\n  children: null,\n}\n\nexport default Layout\n","// @flow\nimport React from 'react'\nimport type { Node } from 'react'\nimport styled from 'styled-components'\n\nconst sizes = [\n  '4.66666666667%',\n  '13.3333333333%',\n  '22%',\n  '30.6666666667%',\n  '39.3333333333%',\n  '48%',\n  '56.6666666667%',\n  '65.3333333333%',\n  '74%',\n  '82.6666666667%',\n  '91.3333333333%',\n  '100%',\n]\n\nconst offsets = [\n  '8.66666666667%',\n  '17.3333333333%',\n  '26%',\n  '34.6666666667%',\n  '43.3333333333%',\n  '52%',\n  '60.6666666667%',\n  '69.3333333333%',\n  '78%',\n  '86.6666666667%',\n  '95.3333333333%',\n]\n\nconst Column = styled.div`\n  width: 100%;\n  float: left;\n  box-sizing: border-box;\n\n  &:first-child {\n    margin-left: 0;\n  }\n\n  @media (min-width: 550px) {\n    width: ${props => props.width};\n    margin-left: ${props => props.marginLeft};\n  }\n`\n\ntype Props = {\n  size: number,\n  offset: number,\n  children?: Node,\n}\n\nexport default ({ size, offset, children }: Props = {}) => {\n  const width = sizes[size - 1] || '100%'\n  let marginLeft\n  if (offset) {\n    marginLeft = offsets[offset - 1] || '4%'\n  } else if (width === '100%') {\n    marginLeft = 0\n  } else {\n    marginLeft = '4%'\n  }\n\n  return (\n    <Column marginLeft={marginLeft} width={width}>\n      {children}\n    </Column>\n  )\n}\n","import styled from 'styled-components'\n\nexport default styled.div`\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`\n","// @flow\n\nexport const LOGIN = 'LOGIN'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\nexport const POSTS_FETCH = 'POSTS_FETCH'\nexport const POSTS_FETCH_SUCCESS = 'POSTS_FETCH_SUCCESS'\nexport const POST_CREATE = 'POST_CREATE'\nexport const POST_CREATE_SUCCESS = 'POST_CREATE_SUCCESS'\nexport const POST_DELETE = 'POST_DELETE'\nexport const POST_DELETE_SUCCESS = 'POST_DELETE_SUCCESS'\nexport const POST_EDIT = 'POST_EDIT'\nexport const POST_EDIT_SUCCESS = 'POST_EDIT_SUCCESS'\nexport const ADMINS_FETCH = 'ADMINS_FETCH'\nexport const ADMINS_FETCH_SUCCESS = 'ADMINS_FETCH_SUCCESS'\nexport const ADMIN_CREATE = 'ADMIN_CREATE'\nexport const ADMIN_CREATE_SUCCESS = 'ADMIN_CREATE_SUCCESS'\nexport const ADMIN_DELETE = 'ADMIN_DELETE'\nexport const ADMIN_DELETE_SUCCESS = 'ADMIN_DELETE_SUCCESS'\n\nexport const login = (email: string, password: string) => ({\n  type: LOGIN,\n  email,\n  password,\n})\n\nexport const fetchPosts = () => ({\n  type: POSTS_FETCH,\n})\n\nexport const createPost = (title: string, body: string, options: Object) => ({\n  type: POST_CREATE,\n  title,\n  body,\n  options,\n})\n\nexport const deletePost = (id: number) => ({\n  type: POST_DELETE,\n  id,\n})\n\nexport const editPost = (id: number, title: string, body: string) => ({\n  type: POST_EDIT,\n  id,\n  title,\n  body,\n})\n\nexport const fetchAdmins = () => ({\n  type: ADMINS_FETCH,\n})\n\nexport const createAdmin = (email: string, password: string) => ({\n  type: ADMIN_CREATE,\n  email,\n  password,\n})\n\nexport const deleteAdmin = (id: number) => ({\n  type: ADMIN_DELETE,\n  id,\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst DefaultButton = styled.button`\n  display: inline-block;\n  height: 45px;\n  padding: 0 22px;\n  color: #2977f5;\n  text-align: center;\n  font-size: 1.4rem;\n  font-weight: 600;\n  line-height: 45px;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  text-decoration: none;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n  outline: 0;\n  border-radius: 2px;\n  cursor: pointer;\n  box-sizing: border-box;\n  transition-property: color;\n  transition-duration: 0.3s;\n  transition-timing-function: ease-in-out;\n`\n\nconst PrimaryButton = styled(DefaultButton)`\n  background-color: #2977f5;\n  box-shadow: 0 2px 10px -2px rgba(0, 0, 0, 0.1);\n  color: rgba(255, 255, 255, 0.9);\n  display: block;\n  transform: translateY(0);\n  transition-property: background-color, transform, box-shadow;\n\n  &:hover {\n    box-shadow: 0 4px 12px 2px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n  }\n`\n\nconst Button = ({ primary = false, ...props }) => {\n  const Component = primary ? PrimaryButton : DefaultButton\n  return <Component {...props} />\n}\n\nexport default Button\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { createPost, editPost } from '../../store/actions'\n\nimport Button from '../../components/Button'\n\ntype Props = {\n  createPost: Function,\n  editPost: Function,\n}\nclass PostForm extends React.Component<Props> {\n  constructor(props) {\n    super(props)\n    this.state = this.getInitialState()\n  }\n\n  getInitialState() {\n    return {\n      id: '',\n      title: '',\n      body: '',\n      shouldPost: true,\n      shouldNotify: false,\n      isTest: false,\n    }\n  }\n\n  post = () => {\n    const { createPost } = this.props\n    const { title, body, shouldPost, shouldNotify, isTest } = this.state\n    createPost(title, body, {\n      shouldPost,\n      shouldNotify,\n      isTest,\n    })\n    // TODO: handle error.\n    this.setState(this.getInitialState())\n  }\n\n  edit = () => {\n    const { editPost } = this.props\n    const { id, title, body } = this.state\n    editPost(id, title, body)\n    // TODO: handle error.\n    this.setState(this.getInitialState())\n  }\n\n  render() {\n    const { id, title, body, shouldPost, shouldNotify, isTest } = this.state\n    return (\n      <form\n        style={{\n          padding: '50px 30px',\n          border: '1px solid #eaeaef',\n          borderRadius: 4,\n          boxShadow: '0 2px 8px 2px rgba(0, 0, 0, 0.025)',\n        }}\n      >\n        {/* TODO: show error */}\n        <input\n          type=\"number\"\n          style={{\n            width: 125,\n            borderWidth: 1,\n            borderRadius: 100,\n            padding: 20,\n          }}\n          placeholder=\"#\"\n          value={id}\n          onChange={event => {\n            this.setState({\n              id: event.target.value,\n            })\n          }}\n        />\n        <br />\n        <br />\n        <input\n          style={{\n            width: '100%',\n          }}\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={event => {\n            this.setState({\n              title: event.target.value,\n            })\n          }}\n        />\n        <br />\n        <br />\n        <textarea\n          style={{\n            width: '100%',\n          }}\n          placeholder=\"Body\"\n          value={body}\n          onChange={event => {\n            this.setState({\n              body: event.target.value,\n            })\n          }}\n        />\n        <br />\n        <br />\n        {id ? null : (\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={shouldPost}\n              onChange={event => {\n                this.setState({\n                  shouldPost: event.target.checked,\n                })\n              }}\n            />{' '}\n            Post &nbsp;\n            <input\n              type=\"checkbox\"\n              checked={shouldNotify}\n              onChange={event => {\n                this.setState({\n                  shouldNotify: event.target.checked,\n                })\n              }}\n            />{' '}\n            Notify &nbsp;\n            {shouldNotify ? (\n              <span>\n                <input\n                  type=\"checkbox\"\n                  checked={isTest}\n                  onChange={event => {\n                    this.setState({\n                      isTest: event.target.checked,\n                    })\n                  }}\n                />{' '}\n                Test\n              </span>\n            ) : null}\n            <br />\n            <br />\n          </div>\n        )}\n\n        <Button type=\"button\" primary onClick={id ? this.edit : this.post}>\n          {id ? 'Edit' : 'Publish'}\n        </Button>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  createPost: (title, body, options) => {\n    dispatch(createPost(title, body, options))\n  },\n  editPost: (id, title, body) => {\n    dispatch(editPost(id, title, body))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PostForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { format } from 'date-fns'\n\nimport { deletePost } from '../../store/actions'\nimport type { Post as PostType } from '../../types'\n\nconst formatDate = date => format(date, 'd MMM yyyy, hh:mm:ss')\n\nconst PostWrapper = styled.div`\n  border-bottom: 1px solid #eaeaef;\n  padding: 6rem 0;\n  overflow: hidden;\n\n  &:last-child {\n    border: 0;\n  }\n`\n\nconst PostMetadata = styled.div`\n  color: #84849b;\n  font-size: 1.5rem;\n`\n\nconst Box = styled.span`\n  border: 1px solid #84849b44;\n  padding: 2px 4px;\n  border-radius: 2px;\n`\n\nconst Actions = styled.div`\n  margin-top: 2rem;\n`\n\nconst ActionButton = styled.button.attrs({\n  type: 'button',\n})`\n  color: #2977f5;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n  font-size: 0.8em;\n  background-color: #fff;\n  padding: 10px 20px;\n  border-radius: 100px;\n  border: 1px solid #eaeaef;\n  cursor: pointer;\n  transition: box-shadow 0.2s, color 0.2s;\n\n  &:hover {\n    color: #2977f5aa;\n    box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.05);\n  }\n`\n\ntype Props = PostType\nclass Post extends React.Component<Props> {\n  del = () => {\n    const { deletePost, id, title } = this.props\n    // eslint-disable-next-line no-alert\n    if (!window.confirm(`Are you sure you want to delete post '${title}'?`)) return\n    deletePost(id)\n  }\n\n  render() {\n    // eslint-disable-next-line camelcase\n    const { id, title, body, created_at, updated_at } = this.props\n    return (\n      <PostWrapper>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n          }}\n        >\n          <h2\n            style={{\n              fontSize: '2rem',\n            }}\n          >\n            {title}\n          </h2>\n          <span\n            style={{\n              color: '#2977f5',\n              fontWeight: 'bold',\n              fontSize: '0.8em',\n            }}\n          >\n            #{id}\n          </span>\n        </div>\n        <p>{body}</p>\n        <PostMetadata>\n          Published <Box>{formatDate(created_at)}</Box>, updated at{' '}\n          <Box>{formatDate(updated_at)}</Box>\n        </PostMetadata>\n        <Actions>\n          <ActionButton onClick={this.del}>Delete</ActionButton>\n        </Actions>\n      </PostWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  deletePost: id => {\n    dispatch(deletePost(id))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Post)\n","// @flow\nimport React from 'react'\n\nimport PostForm from './PostForm'\nimport Post from './Post'\nimport type { Post as PostType } from '../../types'\n\ntype Props = {\n  posts: PostType[],\n}\nclass Posts extends React.Component<Props> {\n  render() {\n    const { posts } = this.props\n    return (\n      <div>\n        <PostForm />\n        {posts.map(post => (\n          <Post key={post.id} {...post} />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Posts\n","import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\n\nimport { deleteAdmin } from '../../store/actions'\nimport type { Admin as AdminType } from '../../types'\n\nimport Button from '../../components/Button'\n\nconst AdminWrapper = styled.div`\n  height: 60px;\n  line-height: 60px;\n  border-bottom: 1px solid #eee;\n  position: relative;\n\n  &:last-child {\n    border: 0;\n  }\n\n  &:hover div[data-type='action-box'] {\n    display: flex;\n  }\n`\n\nconst Actions = styled.div.attrs({\n  'data-type': 'action-box',\n})`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  line-height: 100%;\n  background-color: rgba(255, 255, 255, 0.1);\n  z-index: 1;\n  display: none;\n  align-items: center;\n  justify-content: center;\n`\n\ntype Props = AdminType\nclass Admin extends React.Component<Props> {\n  del = () => {\n    const { deleteAdmin, id, email } = this.props\n    // eslint-disable-next-line no-alert\n    if (!window.confirm(`Are you sure you want to delete admin '${email}'?`)) return\n    deleteAdmin(id)\n  }\n\n  render() {\n    // eslint-disable-next-line camelcase\n    const { email } = this.props\n    return (\n      <AdminWrapper>\n        {email}\n        <Actions>\n          <Button\n            style={{\n              background: 'rgba(255, 255, 255, 0.6)',\n            }}\n            type=\"button\"\n            onClick={this.del}\n          >\n            Delete\n          </Button>\n        </Actions>\n      </AdminWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n  deleteAdmin: id => {\n    dispatch(deleteAdmin(id))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Admin)\n","/* eslint-disable no-alert */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport type { Admin as AdminType } from '../../types'\nimport Admin from './Admin'\n\nimport Button from '../../components/Button'\n\nconst AdminList = styled.div`\n  max-height: 250px;\n  overflow: auto;\n  border: 1px solid #eaeaef;\n  border-left: 0;\n  border-right: 0;\n`\n\ntype Props = {\n  admins: AdminType[],\n  createAdmin: Function,\n}\nclass Admins extends React.Component<Props> {\n  create = () => {\n    const { createAdmin } = this.props\n    const email = window.prompt('Enter email')\n    if (!email) {\n      return\n    }\n    const password = window.prompt('Set a password')\n    if (!password) {\n      return\n    }\n    const data = {\n      email,\n      password,\n    }\n    let confirmation = window.prompt('Confirm password')\n    while (confirmation !== data.password) {\n      if (!confirmation) {\n        return\n      }\n      confirmation = window.prompt('Wrong password, try again')\n    }\n    createAdmin(email, password)\n  }\n\n  render() {\n    const { admins } = this.props\n    return (\n      <div>\n        <h2\n          style={{\n            fontSize: '2rem',\n          }}\n        >\n          Admins\n        </h2>\n        <AdminList>\n          {admins.map(admin => (\n            <Admin key={admin.id} {...admin} />\n          ))}\n        </AdminList>\n        <Button style={{ paddingLeft: 0 }} type=\"button\" onClick={this.create}>\n          Create\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default Admins\n","// @flow\nimport React from 'react'\nimport { Redirect } from '@reach/router'\nimport { connect } from 'react-redux'\n\nimport Container from '../../components/Container'\nimport Header from '../../components/Header'\nimport Layout from '../../components/Layout'\nimport { Row, Column } from '../../components/Grid'\nimport Posts from './Posts'\nimport Admins from './Admins'\nimport type { Post, Admin } from '../../types'\nimport { fetchPosts, fetchAdmins, createAdmin } from '../../store/actions'\n\ntype Props = {\n  auth: Object,\n  posts: Post[],\n  admins: Admin[],\n  fetchPosts: Function,\n  fetchAdmins: Function,\n  createAdmin: Function,\n}\nclass Home extends React.Component<Props> {\n  componentWillMount() {\n    const { fetchPosts, fetchAdmins } = this.props\n    fetchPosts()\n    fetchAdmins()\n  }\n\n  render() {\n    const { auth, posts, admins, createAdmin } = this.props\n    if (!auth.ok) {\n      return <Redirect noThrow to=\"/admin/login\" />\n    }\n    return (\n      <Layout>\n        <Header style={{ paddingTop: '8rem' }}>\n          <Container>\n            <h1>Admin</h1>\n          </Container>\n        </Header>\n        <Container\n          style={{\n            paddingTop: '6rem',\n          }}\n        >\n          <Row>\n            <Column size={4}>\n              <Admins createAdmin={createAdmin} admins={admins} />\n            </Column>\n            <Column size={8}>\n              <Posts posts={posts} />\n            </Column>\n          </Row>\n        </Container>\n      </Layout>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  posts: state.posts,\n  admins: state.admins,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPosts: () => {\n    dispatch(fetchPosts())\n  },\n  fetchAdmins: () => {\n    dispatch(fetchAdmins())\n  },\n  createAdmin: (email, password) => {\n    dispatch(createAdmin(email, password))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home)\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from '@reach/router'\n\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport Button from '../components/Button'\nimport Header from '../components/Header'\n\nimport { login } from '../store/actions'\n\ntype Props = {\n  auth: Function,\n  login: Function,\n}\ntype State = {\n  email: string,\n  password: string,\n}\nclass Login extends React.Component<Props, State> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  done = () => {\n    const { login } = this.props\n    const { email, password } = this.state\n    login(email, password)\n  }\n\n  renderError() {\n    // caller should ensure `message' property exists\n    const { auth } = this.props\n    const { message } = auth\n    return (\n      <div\n        style={{\n          marginBottom: '2rem',\n        }}\n      >\n        <strong>{message}</strong>\n      </div>\n    )\n  }\n\n  render() {\n    const { auth } = this.props\n    const { email, password } = this.state\n    if (auth.ok) {\n      return <Redirect noThrow to=\"/admin\" />\n    }\n    return (\n      <Layout>\n        <Header style={{ paddingTop: '8rem' }}>\n          <Container>\n            <h1>Login</h1>\n          </Container>\n        </Header>\n        <Container\n          style={{\n            paddingTop: '10rem',\n            paddingBottom: '10rem',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          {this.renderError()}\n          <form\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <input\n              onChange={event => {\n                this.setState({\n                  email: event.target.value,\n                })\n              }}\n              value={email}\n              placeholder=\"Email\"\n              type=\"text\"\n            />\n            <br />\n            <input\n              onChange={event => {\n                this.setState({\n                  password: event.target.value,\n                })\n              }}\n              value={password}\n              placeholder=\"Password\"\n              type=\"password\"\n            />\n            <br />\n            <Button primary type=\"button\" onClick={this.done}>\n              Login\n            </Button>\n          </form>\n        </Container>\n      </Layout>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  login(email, password) {\n    dispatch(login(email, password))\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login)\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  POSTS_FETCH_SUCCESS,\n  POST_CREATE_SUCCESS,\n  POST_DELETE_SUCCESS,\n  POST_EDIT_SUCCESS,\n  ADMINS_FETCH_SUCCESS,\n  ADMIN_CREATE_SUCCESS,\n  ADMIN_DELETE_SUCCESS,\n} from './actions'\n\nconst token = localStorage.getItem('token')\n\nconst initialState = {\n  auth: {\n    ok: !!token,\n    message: '',\n    token,\n  },\n  posts: [],\n  admins: [],\n}\n\nconst sortAdmins = arr =>\n  arr.slice(0).sort((a, b) => {\n    if (a.email < b.email) {\n      return -1\n    }\n    if (a.email > b.email) {\n      return 1\n    }\n    return 0\n  })\n\nfunction app(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        auth: {\n          ok: true,\n          token: action.token,\n        },\n      }\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        auth: {\n          ok: false,\n          message: action.message,\n        },\n      }\n    case POSTS_FETCH_SUCCESS:\n      return {\n        ...state,\n        posts: action.posts,\n      }\n    case POST_CREATE_SUCCESS:\n      return {\n        ...state,\n        posts: [action.post, ...state.posts],\n      }\n    case POST_DELETE_SUCCESS:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post.id !== action.id),\n      }\n    case POST_EDIT_SUCCESS:\n      return {\n        ...state,\n        posts: state.posts.map(post => (post.id === action.post.id ? action.post : post)),\n      }\n    case ADMINS_FETCH_SUCCESS:\n      return {\n        ...state,\n        admins: action.admins,\n      }\n    case ADMIN_CREATE_SUCCESS:\n      return {\n        ...state,\n        admins: sortAdmins([action.admin, ...state.admins]),\n      }\n    case ADMIN_DELETE_SUCCESS:\n      return {\n        ...state,\n        admins: state.admins.filter(admin => admin.id !== action.id),\n      }\n    default:\n      return state\n  }\n}\n\nexport default app\n","function url(route) {\n  return `/api/v1/${route}`\n}\n\nasync function login(email, password) {\n  const payload = {\n    email,\n    password,\n  }\n  const response = await fetch(url('auth'), {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  return json\n}\n\nasync function fetchPosts() {\n  const response = await fetch(url('posts'))\n  const json = await response.json()\n  return json.posts\n}\n\nasync function createPost(token, title, body, options) {\n  const payload = {\n    title,\n    body,\n    shouldPost: options.shouldPost,\n    shouldNotify: options.shouldNotify,\n    isTest: options.isTest,\n  }\n  const response = await fetch(url('posts'), {\n    method: 'POST',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.post\n}\n\nasync function deletePost(token, id) {\n  const response = await fetch(url(`posts/${id}`), {\n    method: 'DELETE',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.post\n}\n\nasync function editPost(token, id, title, body) {\n  const payload = {\n    title,\n    body,\n  }\n  const response = await fetch(url(`posts/${id}`), {\n    method: 'PATCH',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.post\n}\n\nasync function fetchAdmins(token) {\n  const response = await fetch(url('admins'), {\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n    }),\n  })\n  const json = await response.json()\n  return json.admins\n}\n\nasync function createAdmin(token, email, password) {\n  const payload = {\n    email,\n    password,\n  }\n  const response = await fetch(url('admins'), {\n    method: 'POST',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.admin\n}\n\nasync function deleteAdmin(token, id) {\n  const response = await fetch(url(`admins/${id}`), {\n    method: 'DELETE',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n  })\n  const json = await response.json()\n  // TODO: handle error\n  return json.post\n}\n\nexport default {\n  login,\n  fetchPosts,\n  createPost,\n  deletePost,\n  editPost,\n  fetchAdmins,\n  createAdmin,\n  deleteAdmin,\n}\n","import { put, takeLatest, call, all, select } from 'redux-saga/effects'\nimport api from '../lib/api'\nimport {\n  LOGIN,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  POSTS_FETCH,\n  POSTS_FETCH_SUCCESS,\n  ADMINS_FETCH,\n  ADMINS_FETCH_SUCCESS,\n  POST_CREATE,\n  POST_CREATE_SUCCESS,\n  POST_DELETE,\n  POST_DELETE_SUCCESS,\n  POST_EDIT_SUCCESS,\n  POST_EDIT,\n  ADMIN_DELETE,\n  ADMIN_DELETE_SUCCESS,\n  ADMIN_CREATE,\n  ADMIN_CREATE_SUCCESS,\n} from './actions'\n\nconst getTokenFromState = state => state.auth.token\n\nfunction* login(action) {\n  const res = yield call(api.login, action.email, action.password)\n  if (res.ok) {\n    localStorage.setItem('token', res.token)\n    yield put({ type: LOGIN_SUCCESS, token: res.token })\n  } else yield put({ type: LOGIN_FAILURE, message: res.message })\n}\n\nfunction* fetchPosts() {\n  const posts = yield call(api.fetchPosts)\n  yield put({ type: POSTS_FETCH_SUCCESS, posts })\n}\n\nfunction* createPost(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  const post = yield call(api.createPost, token, action.title, action.body, action.options)\n  yield put({\n    type: POST_CREATE_SUCCESS,\n    post,\n  })\n}\n\nfunction* deletePost(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  yield call(api.deletePost, token, action.id)\n  yield put({\n    type: POST_DELETE_SUCCESS,\n    id: action.id,\n  })\n}\n\nfunction* editPost(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  const post = yield call(api.editPost, token, action.id, action.title, action.body)\n  yield put({\n    type: POST_EDIT_SUCCESS,\n    post,\n  })\n}\n\nfunction* fetchAdmins() {\n  const token = yield select(getTokenFromState)\n  const admins = yield call(api.fetchAdmins, token)\n  yield put({ type: ADMINS_FETCH_SUCCESS, admins })\n}\n\nfunction* createAdmin(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  const admin = yield call(api.createAdmin, token, action.email, action.password)\n  yield put({\n    type: ADMIN_CREATE_SUCCESS,\n    admin,\n  })\n}\n\nfunction* deleteAdmin(action) {\n  const token = yield select(getTokenFromState)\n  // TODO: check result\n  yield call(api.deleteAdmin, token, action.id)\n  yield put({\n    type: ADMIN_DELETE_SUCCESS,\n    id: action.id,\n  })\n}\n\nfunction* rootSaga() {\n  yield all([\n    takeLatest(LOGIN, login),\n    takeLatest(POSTS_FETCH, fetchPosts),\n    takeLatest(POST_CREATE, createPost),\n    takeLatest(POST_DELETE, deletePost),\n    takeLatest(POST_EDIT, editPost),\n    takeLatest(ADMINS_FETCH, fetchAdmins),\n    takeLatest(ADMIN_CREATE, createAdmin),\n    takeLatest(ADMIN_DELETE, deleteAdmin),\n  ])\n}\n\nexport default rootSaga\n","// @flow\nimport React from 'react'\nimport { Router } from '@reach/router'\nimport { Provider } from 'react-redux'\nimport Home from './pages/Home'\nimport Login from './pages/Login'\nimport configureStore from './store'\n\nconst { store } = configureStore()\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Home path=\"/admin\" />\n      <Login path=\"/admin/login\" />\n    </Router>\n  </Provider>\n)\n\nexport default App\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\n  sagaMiddleware.run(rootSaga)\n  return { store }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}